{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","images/memories.png","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","reducers","combineReducers","posts","action","type","payload","map","post","_id","filter","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","createPost","dispatch","a","newPost","data","console","log","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","useDispatch","classes","useStyles","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","component","tags","tag","gutterBottom","CardContent","message","CardActions","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","useStyle","length","Grid","container","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","useEffect","clear","handleSubmit","e","preventDefault","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"0LAAaA,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAY,YCCZC,EAAWC,YAAgB,CAAEC,MCF3B,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACb,KAAKL,EACH,OAAOI,EAAOE,QAChB,KAAKT,EACH,MAAM,GAAN,mBAAWM,GAAX,CAAkBC,EAAOE,UAC3B,KAAKR,EACH,OAAOK,EAAMI,KAAI,SAACC,GAAD,OACfA,EAAKC,MAAQL,EAAOE,QAAQG,IAAML,EAAOE,QAAUE,KAGvD,KAAKT,EACH,OAAOI,EAAMO,QAAO,SAACF,GAAD,OAAUA,EAAKC,MAAQL,EAAOE,WACpD,QACE,OAAOH,M,gNCdPQ,EAAM,qDAICC,EAAa,SAACC,EAAIC,GAAL,OAAqBC,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMC,IAC9DG,EAAa,SAACJ,GAAD,OAAQE,IAAMG,OAAN,UAAgBP,EAAhB,YAAuBE,KAC5CM,EAAW,SAACN,GAAD,OAAQE,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,EAAtB,eCQnBO,EAAa,SAACZ,GAAD,8CAAU,WAAOa,GAAP,iBAAAC,EAAA,+EDXTC,ECaef,EDbHO,IAAMP,KAAKG,EAAKY,GCWnB,gBAExBC,EAFwB,EAExBA,KAERH,EAAS,CAAEhB,KAAMR,EAAQS,QAASkB,IAJF,gDAMhCC,QAAQC,IAAR,MANgC,kCDXV,IAACH,ICWS,oBAAV,uDAUbX,EAAa,SAACC,EAAIL,GAAL,8CAAc,WAAOa,GAAP,iBAAAC,EAAA,+EAEbK,EAAed,EAAIL,GAFN,gBAE5BgB,EAF4B,EAE5BA,KACRH,EAAS,CAAEhB,KAAMP,EAAQQ,QAASkB,IAHE,gDAKpCC,QAAQC,IAAR,MALoC,yDAAd,uD,SCxBXE,cAAW,CACxBC,MAAO,CACLC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAEvBC,OAAQ,CACNA,OAAQ,SAEVC,eAAgB,CACdL,OAAQ,QAEVM,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,aAAc,OACdV,OAAQ,OACRW,SAAU,YAEZC,QAAS,CACPD,SAAU,WACVE,IAAK,OACLC,KAAM,OACNC,MAAO,SAETC,SAAU,CACRL,SAAU,WACVE,IAAK,OACLI,MAAO,OACPF,MAAO,SAETG,KAAM,CACJX,QAAS,QAEXY,QAAS,CACPZ,QAAS,OACTE,eAAgB,gBAChBW,OAAQ,QAEVC,MAAO,CACLC,QAAS,UAEXC,YAAa,CACXD,QAAS,kBACTf,QAAS,OACTE,eAAgB,mB,OCiCLe,EAhEF,SAAC,GAA4B,IAA1B9C,EAAyB,EAAzBA,KAAM+C,EAAmB,EAAnBA,aACdlC,EAAWmC,cACXC,EAAUC,IAEhB,OACE,eAACC,EAAA,EAAD,CAAMC,UAAWH,EAAQrB,KAAzB,UACE,cAACyB,EAAA,EAAD,CACED,UAAWH,EAAQ5B,MACnBiC,MAAOtD,EAAKuD,aACZZ,MAAO3C,EAAK2C,QAEd,sBAAKS,UAAWH,EAAQf,QAAxB,UACE,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BzD,EAAK0D,UAC/B,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACGE,IAAO3D,EAAK4D,WAAWC,eAG5B,qBAAKT,UAAWH,EAAQX,SAAxB,SACE,cAACwB,EAAA,EAAD,CACEC,MAAO,CAAE1B,MAAO,SAChB2B,KAAK,QACLC,QAAS,kBAAMlB,EAAa/C,EAAKC,MAHnC,SAKE,cAAC,IAAD,CAAeiE,SAAS,gBAG5B,qBAAKd,UAAWH,EAAQR,QAAxB,SACE,cAACe,EAAA,EAAD,CAAYC,QAAQ,QAAQpB,MAAM,gBAAgB8B,UAAU,KAA5D,SACGnE,EAAKoE,KAAKrE,KAAI,SAACsE,GAAD,iBAAaA,EAAb,YAGnB,cAACb,EAAA,EAAD,CACEJ,UAAWH,EAAQN,MACnB2B,cAAY,EACZb,QAAQ,KACRU,UAAU,KAJZ,SAMGnE,EAAK2C,QAER,cAAC4B,EAAA,EAAD,UACE,cAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQpB,MAAM,gBAAgB8B,UAAU,IAA5D,SACGnE,EAAKwE,YAGV,eAACC,EAAA,EAAD,CAAarB,UAAWH,EAAQJ,YAAhC,UACE,eAACiB,EAAA,EAAD,CACEE,KAAK,QACL3B,MAAM,UACN4B,QAAS,kBAAMpD,GFrBAR,EEqBkBL,EAAKC,IFrBxB,uCAAQ,WAAOY,GAAP,iBAAAC,EAAA,+EAELK,EAAad,GAFR,gBAEpBW,EAFoB,EAEpBA,KACRH,EAAS,CAAEhB,KAAMP,EAAQQ,QAASkB,IAHN,gDAK5BC,QAAQC,IAAR,MAL4B,yDAAR,4DAACb,GEkBjB,UAKE,cAAC,IAAD,CAAgB6D,SAAS,UAL3B,kBAKyDlE,EAAK0E,UAAW,OAEzE,eAACZ,EAAA,EAAD,CACEE,KAAK,QACL3B,MAAM,UACN4B,QAAS,kBAAMpD,GFtCER,EEsCkBL,EAAKC,IFtCxB,uCAAQ,WAAOY,GAAP,SAAAC,EAAA,+EAExBK,EAAed,GAFS,OAI9BQ,EAAS,CAAEhB,KAAMN,EAAQO,QAASO,IAJJ,+CAM9BY,QAAQC,IAAR,MAN8B,wDAAR,4DAACb,GEmCnB,UAKE,cAAC,IAAD,CAAY6D,SAAS,UALvB,8BCpEO9C,eAAW,SAACuD,GAAD,MAAY,CACpCC,cAAe,CACb/C,QAAS,OACTgD,WAAY,UAEdC,SAAU,CACRpC,OAAQiC,EAAMI,QAAQ,IAExBC,UAAW,CACTC,UAAW,c,SCgBAC,EArBD,SAAC,GAAsB,IAApBnC,EAAmB,EAAnBA,aACTpD,EAAQwF,aAAY,SAACC,GAAD,OAAWA,EAAMzF,SACrCsD,EAAUoC,IAEhB,OAAQ1F,EAAM2F,OAGZ,cAACC,EAAA,EAAD,CACEnC,UAAWH,EAAQuC,UACnBA,WAAS,EACTX,WAAW,UACXE,QAAS,EAJX,SAMGpF,EAAMI,KAAI,SAACC,GAAD,OACT,cAACuF,EAAA,EAAD,CAAqBE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA7C,SACE,cAAC,EAAD,CAAM5F,KAAMA,EAAM+C,aAAcA,KADvB/C,EAAKC,UATpB,cAAC4F,EAAA,EAAD,K,8CCTWzE,gBAAW,SAACuD,GAAD,MAAY,CACpCmB,KAAM,CACJ,uBAAwB,CACtBpD,OAAQiC,EAAMI,QAAQ,KAG1BgB,MAAO,CACLnD,QAAS+B,EAAMI,QAAQ,IAEzBiB,KAAM,CACJnE,QAAS,OACToE,SAAU,OACVlE,eAAgB,UAElBmE,UAAW,CACTC,MAAO,MACPzD,OAAQ,UAEV0D,aAAc,CACZC,aAAc,QCgHHC,GA7HF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWxD,EAAmB,EAAnBA,aACzB,EAAgCyD,mBAAS,CACvC9C,QAAS,GACTf,MAAO,GACP6B,QAAS,GACTJ,KAAM,GACNb,aAAc,KALhB,mBAAOkD,EAAP,KAAiBC,EAAjB,KAOM1G,EAAOmF,aAAY,SAACC,GAAD,OACvBmB,EAAYnB,EAAMzF,MAAMgH,MAAK,SAACnC,GAAD,OAAaA,EAAQvE,MAAQsG,KAAa,QAEnE1F,EAAWmC,cACXC,EAAUC,KAEhB0D,qBAAU,WACJ5G,GAAM0G,EAAY1G,KACrB,CAACA,IAEJ,IAAM6G,EAAQ,WACZ9D,EAAa,MACb2D,EAAY,CACVhD,QAAS,GACTf,MAAO,GACP6B,QAAS,GACTJ,KAAM,GACNb,aAAc,MAIZuD,EAAY,uCAAG,WAAOC,GAAP,SAAAjG,EAAA,sDACnBiG,EAAEC,iBAEgB,IAAdT,GACF1F,EAASD,EAAW6F,IACpBI,MAEAhG,EAAST,EAAWmG,EAAWE,IAC/BI,KARiB,2CAAH,sDAYlB,OACE,cAACI,EAAA,EAAD,CAAO7D,UAAWH,EAAQ8C,MAA1B,SACE,uBACEmB,aAAa,MACbC,YAAU,EACV/D,UAAS,UAAKH,EAAQ6C,KAAb,YAAqB7C,EAAQ+C,MACtCoB,SAAUN,EAJZ,UAME,cAACtD,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACG8C,EAAS,mBAAevG,EAAK2C,MAApB,KAA+B,sBAE3C,cAAC0E,GAAA,EAAD,CACEC,KAAK,UACL7D,QAAQ,WACR8D,MAAM,UACNC,WAAS,EACTC,MAAOhB,EAAS/C,QAChBgE,SAAU,SAACX,GAAD,OACRL,EAAY,2BAAKD,GAAN,IAAgB/C,QAASqD,EAAEY,OAAOF,YAGjD,cAACJ,GAAA,EAAD,CACEC,KAAK,QACL7D,QAAQ,WACR8D,MAAM,QACNC,WAAS,EACTC,MAAOhB,EAAS9D,MAChB+E,SAAU,SAACX,GAAD,OAAOL,EAAY,2BAAKD,GAAN,IAAgB9D,MAAOoE,EAAEY,OAAOF,YAE9D,cAACJ,GAAA,EAAD,CACEC,KAAK,UACL7D,QAAQ,WACR8D,MAAM,UACNC,WAAS,EACTI,WAAS,EACTC,KAAM,EACNJ,MAAOhB,EAASjC,QAChBkD,SAAU,SAACX,GAAD,OACRL,EAAY,2BAAKD,GAAN,IAAgBjC,QAASuC,EAAEY,OAAOF,YAGjD,cAACJ,GAAA,EAAD,CACEC,KAAK,OACL7D,QAAQ,WACR8D,MAAM,wBACNC,WAAS,EACTC,MAAOhB,EAASrC,KAChBsD,SAAU,SAACX,GAAD,OACRL,EAAY,2BAAKD,GAAN,IAAgBrC,KAAM2C,EAAEY,OAAOF,MAAMK,MAAM,WAG1D,qBAAK1E,UAAWH,EAAQiD,UAAxB,SACE,cAAC,KAAD,CACErG,KAAK,OACLkI,UAAU,EACVC,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OACNvB,EAAY,2BAAKD,GAAN,IAAgBlD,aAAc0E,UAI/C,cAACnE,EAAA,EAAD,CACEV,UAAWH,EAAQmD,aACnB3C,QAAQ,YACRpB,MAAM,UACN2B,KAAK,QACLnE,KAAK,SACL2H,WAAS,EANX,oBAUA,cAAC1D,EAAA,EAAD,CACEL,QAAQ,YACRpB,MAAM,YACN2B,KAAK,QACLC,QAAS4C,EACTW,WAAS,EALX,yB,SCrHOpG,gBAAW,SAACuD,GAAD,qBACxBuD,OAAQ,CACNlG,aAAc,GACdU,OAAQ,SACRb,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChB8C,WAAY,UAEdsD,QAAS,CACP9F,MAAO,qBAETiB,MAAO,CACL8E,WAAY,SAEbzD,EAAM0D,YAAYC,KAAK,MAAQ,CAC9B1D,cAAe,CACb9C,cAAe,uBCnBN,OAA0B,qCCiD1ByG,GAvCH,WACV,MAAkC/B,mBAAS,GAA3C,mBAAOD,EAAP,KAAkBxD,EAAlB,KACMlC,EAAWmC,cACXC,EAAUC,KAMhB,OAJA0D,qBAAU,WACR/F,ETVoB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,+EDFEP,IAAMiI,IAAIrI,GCEZ,gBAElBa,EAFkB,EAElBA,KAERH,EAAS,CAAEhB,KAAML,EAAWM,QAASkB,IAJX,gDAM1BC,QAAQC,IAAI,KAAMsD,SANQ,yDAAN,yDSWnB,CAAC+B,EAAW1F,IAGb,eAAC4H,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,CAAQvF,UAAWH,EAAQiF,OAAQjG,SAAS,SAASI,MAAM,UAA3D,UACE,cAACmB,EAAA,EAAD,CAAYJ,UAAWH,EAAQkF,QAAS1E,QAAQ,KAAKmF,MAAM,SAA3D,sBAGA,qBAAKxF,UAAWH,EAAQK,MAAOuF,IAAKC,GAAUC,IAAI,OAAOzH,OAAO,UAElE,cAAC0H,EAAA,EAAD,CAAMC,IAAE,EAAR,SACE,cAACR,EAAA,EAAD,UACE,eAAClD,EAAA,EAAD,CACAnC,UAAWH,EAAQ2B,cACjBY,WAAS,EACT0D,QAAQ,gBACRrE,WAAW,UACXE,QAAS,EALX,UAOE,cAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,EAAD,CAAO5C,aAAcA,MAEvB,cAACwC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CAAMY,UAAWA,EAAWxD,aAAcA,iBC7BlDoG,I,OAAQC,YAAY3J,EAAU4J,YAAQC,YAAgBC,QAE5DC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.b8c234f8.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\n\r\nexport const reducers = combineReducers({ posts });\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://memories-project-mongo.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`)","import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\nimport posts from \"../reducers/posts\";\r\n\r\n// Action Creators\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error)\r\n    \r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { likePost, deletePost } from \"../../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={post.selectedFile}\r\n        title={post.title}\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button\r\n          style={{ color: \"white\" }}\r\n          size=\"small\"\r\n          onClick={() => setCurrentId(post._id)}\r\n        >\r\n          <MoreHorizIcon fontSize=\"default\" />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n          {post.tags.map((tag) => `#${tag} `)}\r\n        </Typography>\r\n      </div>\r\n      <Typography\r\n        className={classes.title}\r\n        gutterBottom\r\n        variant=\"h5\"\r\n        component=\"h2\"\r\n      >\r\n        {post.title}\r\n      </Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {post.message}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(likePost(post._id))}\r\n        >\r\n          <ThumbUpAltIcon fontSize=\"small\" /> &nbsp; Like &nbsp;{post.likeCount}{\" \"}\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(deletePost(post._id))}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" /> &nbsp; Delete &nbsp;\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Post from \"./Post/Post\";\r\nimport useStyle from \"./styles\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  const posts = useSelector((state) => state.posts);\r\n  const classes = useStyle();\r\n\r\n  return !posts.length ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={6} md={6}>\r\n          <Post post={post} setCurrentId={setCurrentId}/>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Posts;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((message) => message._id === currentId) : null\r\n  );\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(null);\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost(postData));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, postData));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"}\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags (coma separated)\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    color: \"rgba(0,183,255,1)\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    mainContainer: {\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/memories.b55f4763.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Posts from \"./components/Posts/Posts\";\r\nimport Form from \"./components/Form/Form\";\r\nimport { getPosts } from \"./actions/posts\";\r\nimport useStyles from \"./styles\";\r\nimport memories from \"./images/memories.png\";\r\n\r\nconst App = () => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\r\n          Memories\r\n        </Typography>\r\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid\r\n          className={classes.mainContainer}\r\n            container\r\n            justify=\"space-between\"\r\n            alignItems=\"stretch\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts setCurrentId={setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\n\r\nimport \"./index.css\";\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}